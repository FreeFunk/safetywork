<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>标题</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link rel="stylesheet" href="../../../../../layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="../../../../../layuiadmin/style/admin.css" media="all">

    <style type="text/css">
        .layui-table-cell {
            padding: 0 2px;
        }
    </style>
</head>
<body>

<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-form layui-card-header layuiadmin-card-header-auto">
            <div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label" style="padding: 9px 15px;width: 60px;">车牌号</label>
                    <div class="layui-input-inline" style="width: 150px;">
                        <input type="text" id="carPlateNum" name="queryObj.carPlateNum" placeholder="请输入车牌号" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label" style="padding: 9px 15px;width: 60px;">接入平台</label>
                    <div class="layui-input-inline" style="width: 150px;">
                        <input type="text" id="compName" name="queryObj.compName" placeholder="请输入接入平台" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label" style="padding: 9px 15px;width: 60px;">企业名称</label>
                    <div class="layui-input-inline" style="width: 150px;">
                        <input type="text" id="ownerTeamName" name="queryObj.ownerTeamName" placeholder="请输入企业名称" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label" style="padding: 9px 15px;width: 60px;">所属县区</label>
                    <div class="layui-input-inline" style="width: 150px;">
                        <select id="xianquName" name="queryObj.xianquName">
                            <option value=""></option>
                            <option value="海港区">海港区</option>
                            <option value="抚宁区">抚宁区</option>
                            <option value="昌黎县">昌黎县</option>
                            <option value="卢龙县">卢龙县</option>
                            <option value="开发区">开发区</option>
                            <option value="山海关">山海关</option>
                            <option value="青龙县">青龙县</option>
                            <option value="北戴河">北戴河</option>
                        </select>
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label" style="text-align: center;width: 90px;margin-top: 8px;">选择报警日期</label>
                    <div class="layui-input-inline" style="display: inline-flex;width: 370px;margin-top: 8px;">
                        <input style="margin-right: 5px;" type="text" name="queryObj.selectTime" placeholder="开始时间"  id="test1" autocomplete="off" class="layui-input">-<input style="margin-left: 5px;" type="text" name="queryObj.newEndTime" placeholder="结束时间"  id="test2" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-inline">
                    <button class="layui-btn layui-btn-normal" data-type="reload" lay-submit lay-filter="BigdataSafetyWarning-search">
                        查询
                    </button>
                </div>
                <div class="layui-inline">
                    <button class="layui-btn layui-btn-warm " lay-submit lay-filter="BigdataSafetyWarning-reset">
                        重置
                    </button>
                </div>
            </div>
        </div>
        <div class="layui-card-body">
            <div style="padding-bottom: 10px;">
                <!--<button class="layui-btn layuiadmin-btn-comm" data-type="batchdel">删除</button>-->
                <!--<button class="layui-btn layuiadmin-btn-comm" data-type="add">添加</button>-->
            </div>
            <table id="BigdataSafetyWarning-list" lay-filter="BigdataSafetyWarning-list"></table>
            <script type="text/html" id="table-BigdataSafetyWarning-list">
                <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="queryInfo"><i class="layui-icon layui-icon-search layuiadmin-button-btn"></i></a>
                <!--<a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del"><i class="layui-icon layui-icon-delete"></i>删除</a>-->
            </script>
        </div>
    </div>
</div>
<script src="../../../../../layuiadmin/layui/layui.js"></script>
<script>
        layui.config({
            base: '../../../../../layuiadmin/' //静态资源所在路径
        }).extend({
            index:'lib/index',
            common:'common'
        }).use(['index','table', 'form','common','laydate'], function(exports){
            var $ = layui.$
                ,laydate = layui.laydate
                ,table = layui.table
                ,common = layui.common
                ,admin = layui.admin
                ,form = layui.form;

            //查询
            form.on('submit(BigdataSafetyWarning-search)', function(data){
                var field = data.field;
                //1.判断时间是否跨月
                var inputTime = $("#test1").val();
                var inputTimeEnd = $("#test2").val();
                startNewArr = inputTime.split("-");
                endNewArr = inputTimeEnd.split("-");
                if(startNewArr[1]==endNewArr[1]){
                    table.reload('BigdataSafetyWarning-list', {
                        where: field
                    });
                }else {
                    layer.alert('统计报警区间不能跨月', {
                        offset: 'auto',
                    });
                }
            });

            form.on('submit(BigdataSafetyWarning-reset)', function(data){
                //xianquName
                $("#xianquName").val("");
                //test6
                $("#test1").val("");
                $("#test2").val("");
                //ownerTeamName
                $("#ownerTeamName").val("");
                //compName
                $("#compName").val("");
                //carPlateNum
                $("#carPlateNum").val("");

                form.render();
            });

            /*
            * 定义表格
            * */
            defineTable = function () {
                var headers = layui.admin.getTokenHeader();
                table.render({
                    elem: '#BigdataSafetyWarning-list' //指定原始表格的选择器（id选择器）
                    ,url:layui.setter.basePath +'/admin/bigdataSafetyWarning/listpage.jsn' //模拟接口
                    ,headers:headers
                    ,method: 'post'
                    ,parseData: function(res){ //res 即为原始返回的数据
                        return {
                            "code": res.success, //解析接口状态
                            "msg": res.errMsg, //解析提示文本
                            "count": res.totalCount, //解析数据长度
                            "data": res.list //解析数据列表
                        };
                    }
                    ,response: {
                        statusCode: true //规定成功的状态码，默认：0
                    }
                    ,cols: [[
                        // {type: 'checkbox', fixed: 'left'}
                        {type:'numbers'}
                ,{field: 'compName',align: 'center', width: '15%', title: '接入平台',sort: true}
                ,{field: 'ownerTeamName',align: 'center', width: '20%', title: '所属企业',sort: true}
                        ,{field: 'carPlateNum',align: 'center', width: '10%', title: '车牌号',sort: true}
                        ,{field: 'carFrameNum',align: 'center', width: '15%', title: '车架号',sort: true}
                        ,{field: 'carType',align: 'center', width: '7%', title: '车辆类型',sort: true}
                        ,{field: 'carPlateColor',align: 'center', width: '9%', title: '车牌颜色',sort: true,
                            templet: function(d){
                                if(d.carPlateColor==1){
                                    return "蓝色";
                                }else if (d.carPlateColor==2){
                                    return "黄色";
                                }else {
                                    return "";
                                }
                            }
                            }
                        ,{field: 'warningType',align: 'center', width: '15%', title: '事件类型',sort: true}
                        ,{field: 'uploadTime',align: 'center', width: '15%', title: '报警时间',templet: function(d){
                                return Format(d.uploadTime,"yyyy-MM-dd hh:mm:ss");},sort: true}
                        ,{field: 'alarmState',align: 'center', width: '8%', title: '标志状态',sort: true}
                        ,{field: 'warningLevel',align: 'center', width: '9%', title: '报警级别',sort: true,
                            templet: function(d){
                               if(d.warningLevel==1){
                                   return "一级警报";
                               }else if (d.warningLevel==2){
                                   return "二级警报";
                               }else {
                                   return "";
                               }
                            }
                        }
                        ,{field: 'speed',align: 'center', width: '8%', title: '速度',sort: true}
                        ,{field: 'lat',align: 'center', width: '15%', title: '纬度',sort: true}
                        ,{field: 'lon',align: 'center', width: '15%', title: '经度',sort: true}
                        ,{field: 'xianquName',align: 'center', width: '15%', title: '县区',sort: true}
                        ,{field: 'id',align: 'center', width: '15%', title: '主键',sort: true,hide:true}
                    ,{field: 'createTime',align: 'center', width: '15%', title: '创建时间',templet: function(d){
                    return common.DateFormat(d.createTime,"yyyy-MM-dd");},sort: true,hide:true}
            ,{field: 'compId',align: 'center', width: '15%', title: '运营商id',sort: true,hide:true}
            ,{field: 'bid',align: 'center', width: '15%', title: '业务主键',sort: true,hide:true}
            ,{field: 'deviceno',align: 'center', width: '15%', title: '终端设备编号',sort: true}
            ,{field: 'sim',align: 'center', width: '15%', title: '终端SIM卡号',sort: true}
            ,{field: 'direction',align: 'center', width: '15%', title: '方向',sort: true,hide:true}
                    ,{field: 'starttime',align: 'center', width: '15%', title: '开始时间',templet: function(d){
                    return common.DateFormat(d.starttime,"yyyy-MM-dd");},sort: true,hide:true}
                    ,{field: 'endtime',align: 'center', width: '15%', title: '结束时间',templet: function(d){
                    return common.DateFormat(d.endtime,"yyyy-MM-dd");},sort: true,hide:true}
            ,{field: 'carPlateColorText',align: 'center', width: '15%', title: '车牌颜色文本',sort: true,hide:true}

            ,{field: 'empName',align: 'center', width: '15%', title: '司机',sort: true,hide:true}
            ,{field: 'empIdCard',align: 'center', width: '15%', title: '身份证号',sort: true,hide:true}
            ,{field: 'empCode',align: 'center', width: '15%', title: '资格证号',sort: true,hide:true}
            ,{field: 'empId',align: 'center', width: '15%', title: '从业人员id',sort: true,hide:true}
            ,{field: 'ownerTeamId',align: 'center', width: '15%', title: '所属企业ID',sort: true,hide:true}
            ,{field: 'warningInfo',align: 'center', width: '15%', title: '报警详情',sort: true,hide:true}
            ,{field: 'detailInfo',align: 'center', width: '15%', title: '处理结果',sort: true,hide:true}
            ,{field: 'handleState',align: 'center', width: '15%', title: '处理状态',sort: true}
            ,{field: 'handleType',align: 'center', width: '15%', title: '处理方式',sort: true,hide:true}
                    ,{field: 'handleTime',align: 'center', width: '15%', title: '处理时间',templet: function(d){
                    return common.DateFormat(d.handleTime,"yyyy-MM-dd");},sort: true,hide:true}
            ,{field: 'handlePeople',align: 'center', width: '15%', title: '处理人',sort: true,hide:true}
            ,{field: 'countDate',align: 'center', width: '15%', title: '统计日期',sort: true,hide:true}
            ,{field: 'countMonth',align: 'center', width: '15%', title: '统计月份',sort: true,hide:true}
            ,{title: '证据中心', minWidth: 80, align: 'center', fixed: 'right', toolbar: '#table-BigdataSafetyWarning-list'}
            ]]
            ,autoSort: false
                    ,page: true
                    ,limit: 10
                    ,limits: [10, 20, 30,40]
                    ,text: {
                    none: '暂无相关数据'
                }
            });

                //为toolbar添加事件响应
                table.on('tool(BigdataSafetyWarning-list)', function(obj){ //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                    /*var data = obj.data;*///获得当前行数据
                    //区分事件
                    switch(obj.event){
                        case 'del':
                            deleteVo(obj);
                            break;
                        case 'edit':
                            editVo(obj);
                            break;
                        case 'queryInfo':
                            queryInfoVo(obj);
                            break;
                    };
                });

                //监听排序事件
                table.on('sort(BigdataSafetyWarning-list)', function(obj){ //注：sort是工具条事件名，LAY-app-province-list是table原始容器的属性 lay-filter="对应的值"
                    var sort = obj.field;
                    //默认排序
                    switch(obj.field){
                        case 'id':
                            sort ="ID";
                            break;
                        case 'createTime':
                            sort ="CREATE_TIME";
                            break;
                        case 'compId':
                            sort ="COMP_ID";
                            break;
                        case 'compName':
                            sort ="COMP_NAME";
                            break;
                        case 'bid':
                            sort ="B_ID";
                            break;
                        case 'deviceno':
                            sort ="DEVICENO";
                            break;
                        case 'sim':
                            sort ="SIM";
                            break;
                        case 'lon':
                            sort ="LON";
                            break;
                        case 'lat':
                            sort ="LAT";
                            break;
                        case 'speed':
                            sort ="SPEED";
                            break;
                        case 'direction':
                            sort ="DIRECTION";
                            break;
                        case 'starttime':
                            sort ="STARTTIME";
                            break;
                        case 'endtime':
                            sort ="ENDTIME";
                            break;
                        case 'carPlateNum':
                            sort ="CAR_PLATE_NUM";
                            break;
                        case 'carPlateColor':
                            sort ="CAR_PLATE_COLOR";
                            break;
                        case 'carPlateColorText':
                            sort ="CAR_PLATE_COLOR_TEXT";
                            break;
                        case 'carFrameNum':
                            sort ="CAR_FRAME_NUM";
                            break;
                        case 'carType':
                            sort ="CAR_TYPE";
                            break;
                        case 'empName':
                            sort ="EMP_NAME";
                            break;
                        case 'empIdCard':
                            sort ="EMP_ID_CARD";
                            break;
                        case 'empCode':
                            sort ="EMP_CODE";
                            break;
                        case 'empId':
                            sort ="EMP_ID";
                            break;
                        case 'ownerTeamId':
                            sort ="OWNER_TEAM_ID";
                            break;
                        case 'ownerTeamName':
                            sort ="OWNER_TEAM_NAME";
                            break;
                        case 'warningType':
                            sort ="WARNING_TYPE";
                            break;
                        case 'warningLevel':
                            sort ="WARNING_LEVEL";
                            break;
                        case 'warningInfo':
                            sort ="WARNING_INFO";
                            break;
                        case 'uploadTime':
                            sort ="UPLOAD_TIME";
                            break;
                        case 'alarmState':
                            sort ="ALARM_STATE";
                            break;
                        case 'detailInfo':
                            sort ="DETAIL_INFO";
                            break;
                        case 'handleState':
                            sort ="HANDLE_STATE";
                            break;
                        case 'handleType':
                            sort ="HANDLE_TYPE";
                            break;
                        case 'handleTime':
                            sort ="HANDLE_TIME";
                            break;
                        case 'handlePeople':
                            sort ="HANDLE_PEOPLE";
                            break;
                        case 'countDate':
                            sort ="COUNT_DATE";
                            break;
                        case 'countMonth':
                            sort ="COUNT_MONTH";
                            break;
                    };
                    if(obj.type==null){
                        return;
                    }
                    //有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
                    table.reload('BigdataSafetyWarning-list', {
                        initSort: obj//记录初始排序，如果不设的话，将无法标记表头的排序状态。
                        ,where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
                            orderBy: sort+" "+obj.type //排序字段
                        }
                    });
                });
            }
            defineTable();

            //查看详细信息
            queryInfoVo = function(obj){
                admin.req({
                    url:layui.setter.basePath +'/admin/bigdataSafetyWarning/queryInfoVo.jsn',
                    data:{'ids':obj.data.id,'countMonth':obj.data.countMonth},
                    method:"post",
                    success:function (data) {//warningType
                        var str = '';
                        if(obj.data.warningType!=undefined){
                            str = obj.data.warningType+"-证据中心";
                        }else {
                            str='证据中心';
                        }
                        debugger
                        layer.open({
                            type: 2
                            ,title: str
                            ,content: 'BigdataSafetyWarningInfo.html'
                            ,area: ['1100px', '600px']
                            ,btn: ['返回']
                            ,closeBtn: false
                            ,maxmin: false
                            ,success: function(layero, index){
                                debugger
                                var s = layero.find('iframe');
                                $("id",s[0].contentWindow.document).val(obj.data.id);
                                //给iframe元素赋值
                                var othis = layero.find('iframe').contents().find("#BigdataSafetyWarning-form").click();
                                //所属企业ownerTeamName
                                debugger
                                othis.find('input[name="ownerTeamName"]').val(obj.data.ownerTeamName);
                                //车牌号carPlateNum
                                othis.find('input[name="carPlateNum"]').val(obj.data.carPlateNum);
                                //报警类型warningType
                                othis.find('input[name="warningType"]').val(obj.data.warningType);
                                //速度speed
                                othis.find('input[name="speed"]').val(obj.data.speed);
                                //报警时间uploadTime
                                othis.find('input[name="uploadTime"]').val(obj.data.uploadTime);
                                //时间过程
                                //地点  (经纬度) lon   lat
                                othis.find('input[name="lonLat"]').val(obj.data.lon+","+obj.data.lat);

                                //司机姓名empName 联系方式
                                othis.find('input[name="empName"]').val(obj.data.empName);
                                //联系方式
                                //驾照编码
                                //从业证书empCode
                                //处理人员handlePeople
                                othis.find('input[name="handlePeople"]').val(obj.data.handlePeople);
                                //处理时间handleTime
                                othis.find('input[name="handleTime"]').val(obj.data.handleTime);
                                //处理方式handleType
                                othis.find('input[name="handleType"]').val(obj.data.handleType);
                                //处理内容detailInfo
                                othis.find('input[name="detailInfo"]').val(obj.data.detailInfo);

                                var listVideo = data.data.listVideo;
                                if(listVideo.length!=0){
                                    for(var i=0;i<listVideo.length;i++){
                                        othis.find('#videoId').append('<video src = "' + listVideo[i].fileUrl + '" style="height:230px; width:400px;margin-bottom: 16px;"  controls="controls"></video>');
                                    }
                                }else if(listVideo.length==0){
                                    othis.find('#videoId').append('无视频');
                                }

                                var listPicture = data.data.listPicture;
                                if(listPicture.length!=0){
                                    for(var i=0;i<listPicture.length;i++){
                                        othis.find('#tuPianId').append('<img src="' + listPicture[i].fileUrl + '" style="height: 230px;width: 400px;position: absolute;">');
                                    }
                                }else if(listPicture.length==0){
                                    othis.find('#tuPianId').append('无图片');
                                }

                            }
                            ,yes: function(index, layero){
                                layer.close(index);
                            }
                        });
                    },
                });
            }



            //删除
            deleteVo = function (obj) {
                layer.confirm('确定删除此记录吗？', function(index){
                    admin.req({
                        url:layui.setter.basePath +'/admin/bigdataSafetyWarning/deleteByIds.jsn',
                        data:{'ids':obj.data.id},
                        method:"post",
                        success:function (data) {
                            table.reload('BigdataSafetyWarning-list',
                                {page:
                                    { curr: common.deleteJumpPage(obj) // 执行页面跳转方法
                                    }
                                }
                            );
                            layer.close(index);
                            layer.msg('删除成功', {
                                icon: 1
                            });
                        },
                    });
                });
            }
            //编辑
            editVo = function (obj) {
                layer.open({
                    type: 2
                    ,title: '编辑'
                    ,content: 'BigdataSafetyWarningEdit.html'
                    ,maxmin: true
                    ,area: ['550px', '550px']
                    ,btn: ['确定', '取消']
                    ,success: function(layero, index){
                        var s = layero.find('iframe');
                        $("id",s[0].contentWindow.document).val(obj.data.id);
                        //给iframe元素赋值
                        var othis = layero.find('iframe').contents().find("#BigdataSafetyWarning-form").click();

                        othis.find('input[name="id"]').val(obj.data.id);
                        othis.find('input[name="createTime"]').val(obj.data.createTime);
                        othis.find('input[name="compId"]').val(obj.data.compId);
                        othis.find('input[name="compName"]').val(obj.data.compName);
                        othis.find('input[name="bid"]').val(obj.data.bid);
                        othis.find('input[name="deviceno"]').val(obj.data.deviceno);
                        othis.find('input[name="sim"]').val(obj.data.sim);
                        othis.find('input[name="lon"]').val(obj.data.lon);
                        othis.find('input[name="lat"]').val(obj.data.lat);
                        othis.find('input[name="speed"]').val(obj.data.speed);
                        othis.find('input[name="direction"]').val(obj.data.direction);
                        othis.find('input[name="starttime"]').val(obj.data.starttime);
                        othis.find('input[name="endtime"]').val(obj.data.endtime);
                        othis.find('input[name="carPlateNum"]').val(obj.data.carPlateNum);
                        othis.find('input[name="carPlateColor"]').val(obj.data.carPlateColor);
                        othis.find('input[name="carPlateColorText"]').val(obj.data.carPlateColorText);
                        othis.find('input[name="carFrameNum"]').val(obj.data.carFrameNum);
                        othis.find('input[name="carType"]').val(obj.data.carType);
                        othis.find('input[name="empName"]').val(obj.data.empName);
                        othis.find('input[name="empIdCard"]').val(obj.data.empIdCard);
                        othis.find('input[name="empCode"]').val(obj.data.empCode);
                        othis.find('input[name="empId"]').val(obj.data.empId);
                        othis.find('input[name="ownerTeamId"]').val(obj.data.ownerTeamId);
                        othis.find('input[name="ownerTeamName"]').val(obj.data.ownerTeamName);
                        othis.find('input[name="warningType"]').val(obj.data.warningType);
                        othis.find('input[name="warningLevel"]').val(obj.data.warningLevel);
                        othis.find('input[name="warningInfo"]').val(obj.data.warningInfo);
                        othis.find('input[name="uploadTime"]').val(obj.data.uploadTime);
                        othis.find('input[name="alarmState"]').val(obj.data.alarmState);
                        othis.find('input[name="detailInfo"]').val(obj.data.detailInfo);
                        othis.find('input[name="handleState"]').val(obj.data.handleState);
                        othis.find('input[name="handleType"]').val(obj.data.handleType);
                        othis.find('input[name="handleTime"]').val(obj.data.handleTime);
                        othis.find('input[name="handlePeople"]').val(obj.data.handlePeople);
                        othis.find('input[name="countDate"]').val(obj.data.countDate);
                        othis.find('input[name="countMonth"]').val(obj.data.countMonth);
                    }
                    ,yes: function(index, layero){
                        var submit = layero.find('iframe').contents().find("#BigdataSafetyWarning-form-edit");
                        submit.trigger('click');
                    }
                });
            }

            //点击事件
            var active = {
                //批量删除
                batchdel: function(){
                    var checkStatus = table.checkStatus('BigdataSafetyWarning-list')
                        ,checkData = checkStatus.data; //得到选中的数据

                    if(checkData.length === 0){
                        return layer.msg('请选择数据');
                    }

                    layer.confirm('确定删除吗？', function(index) {
                        var ids = "" ;
                        for(var i = 0;i<checkData.length;i++){
                            if(ids==""){
                                ids= checkData[i].id;
                            }else {
                                ids = ids+","+checkData[i].id;
                            }
                        }
                        admin.req({
                            url:layui.setter.basePath +'/admin/bigdataSafetyWarning/deleteByIds.jsn',
                            data:{'ids':ids},
                            method:"post",
                            success:function (data) {
                                table.reload('BigdataSafetyWarning-list',
                                    {page:
                                        { curr: common.deleteDulJumpPage(checkStatus) // 执行页面跳转方法
                                        }
                                    }
                                );
                                layer.msg('删除成功', {
                                    icon: 1
                                });
                            },
                        });
                    });
                }
                //添加
                ,add: function(){
                    layer.open({
                        type: 2
                        ,title: '添加'
                        ,content: 'BigdataSafetyWarningAdd.html'
                        ,maxmin: true
                        ,area: ['550px', '550px']
                        ,btn: ['确定', '取消']
                        ,yes: function(index, layero){
                            //点击确认触发 iframe 内容中的按钮提交
                            var submit = layero.find('iframe').contents().find("#BigdataSafetyWarning-form-submit");
                            submit.click();
                        }
                    });
                }
            }
            //绑定点击事件
            $('.layui-btn.layuiadmin-btn-comm').on('click', function(){
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });

            //日期范围
            // laydate.render({
            //     elem: '#test6'
            //     ,range: true
            // });
            laydate.render({
                elem: '#test1'
            });
            laydate.render({
                elem: '#test2'
            });
        });

</script>
</body>
</html>

